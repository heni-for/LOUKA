#!/usr/bin/env python3
"""
ุงุฎุชุจุงุฑ ูููุง ุจุงููุบุฉ ุงูุชููุณูุฉ ููุท
Test Luca with Tunisian language only
"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent))

from assistant.emotional_tts import speak_with_emotion, speak_naturally
from assistant.google_tts_arabic import test_arabic_pronunciation
import time

def test_basic_tunisian():
    """ุงุฎุชุจุงุฑ ุฃุณุงุณู ููุบุฉ ุงูุชููุณูุฉ."""
    print("๐ค ุงุฎุชุจุงุฑ ุฃุณุงุณู ููุบุฉ ุงูุชููุณูุฉ")
    print("=" * 50)
    print("ุงุฎุชุจุงุฑ ุงููุทู ุงูุนุฑุจู ุงูุชููุณู...")
    print()
    
    try:
        success = test_arabic_pronunciation()
        if success:
            print("โ ุงุฎุชุจุงุฑ ุงููุทู ุงูุฃุณุงุณู ูุฌุญ!")
        else:
            print("โ ุงุฎุชุจุงุฑ ุงููุทู ุงูุฃุณุงุณู ูุดู!")
        return success
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ ุงูุฃุณุงุณู: {e}")
        return False

def test_emotional_tunisian():
    """ุงุฎุชุจุงุฑ ุงูุนูุงุทู ุงูุชููุณูุฉ."""
    print("\n๐ ุงุฎุชุจุงุฑ ุงูุนูุงุทู ุงูุชููุณูุฉ")
    print("=" * 50)
    print("ุงุฎุชุจุงุฑ ุงูุนูุงุทู ุงููุฎุชููุฉ ุจุงูููุฌุฉ ุงูุชููุณูุฉ...")
    print()
    
    emotions = [
        ("happy", "ุฃูุ ุฒููุฉ! ููุง ูุนูููุง!", "ูุฌุจ ุฃู ูุจุฏู ูุฑุญ"),
        ("excited", "ููุชุงุฒ! ูุนูููุง ุจุณุฑุนุฉ!", "ูุฌุจ ุฃู ูุจุฏู ูุชุญูุณ"),
        ("calm", "ุทูุจุ ููุง ูุนูููุง ุจูุฏูุก", "ูุฌุจ ุฃู ูุจุฏู ูุงุฏุฆ"),
        ("tired", "ุฃูุ ุชุนุจุงู ุดููุฉ", "ูุฌุจ ุฃู ูุจุฏู ูุชุนุจ"),
        ("concerned", "ูุด ูุงุฏุฑ ุฃุนูู ุงูุญุงุฌุฉ", "ูุฌุจ ุฃู ูุจุฏู ููู"),
        ("playful", "ููููุ ููุชุฉ ุฒููุฉ!", "ูุฌุจ ุฃู ูุจุฏู ูุฑุญ"),
        ("professional", "ุณุฃููู ุจุชูููุฐ ุงููููุฉ", "ูุฌุจ ุฃู ูุจุฏู ูููู"),
        ("neutral", "ุทูุจุ ุดูู ูุนููุ", "ูุฌุจ ุฃู ูุจุฏู ุนุงุฏู")
    ]
    
    for emotion, phrase, description in emotions:
        print(f"ุงุฎุชุจุงุฑ {emotion.upper()}:")
        print(f"ุงููุตู: {description}")
        print(f"ุงูุนุจุงุฑุฉ: '{phrase}'")
        print("ุงูุชุญุฏุซ ูุน TTS ุงูุนุงุทูู...")
        
        try:
            success = speak_with_emotion(phrase, emotion)
            if success:
                print("โ ุชู ุงูุชุญุฏุซ ุจูุฌุงุญ!")
            else:
                print("โ ูุดู ูู ุงูุชุญุฏุซ")
        except Exception as e:
            print(f"โ ุฎุทุฃ: {e}")
        
        print()
        time.sleep(1)
    
    print("๐ฏ ุงูุชูู ุงุฎุชุจุงุฑ ุงูุนูุงุทู ุงูุชููุณูุฉ!")

def test_short_phrases():
    """ุงุฎุชุจุงุฑ ุงูุนุจุงุฑุงุช ุงููุตูุฑุฉ."""
    print("\n๐ ุงุฎุชุจุงุฑ ุงูุนุจุงุฑุงุช ุงููุตูุฑุฉ")
    print("=" * 50)
    print("ุงุฎุชุจุงุฑ ุงูุนุจุงุฑุงุช ุงููุตูุฑุฉ ูุชุฌูุจ ุงูุชุนููู...")
    print()
    
    short_phrases = [
        ("ุฃููุง", "happy", "ุชุญูุฉ ูุตูุฑุฉ"),
        ("ุทูุจ", "neutral", "ุฑุฏ ูุตูุฑ"),
        ("ุฒููุฉ", "playful", "ุฅูุฌุงุจู ูุตูุฑ"),
        ("ูุด", "concerned", "ุณูุจู ูุตูุฑ"),
        ("ุฃู", "tired", "ุตูุช ูุชุนุจ ูุตูุฑ")
    ]
    
    for phrase, emotion, description in short_phrases:
        print(f"ุงุฎุชุจุงุฑ: '{phrase}' ({emotion})")
        print(f"ุงููุตู: {description}")
        print("ุงูุชุญุฏุซ...")
        
        try:
            success = speak_with_emotion(phrase, emotion)
            if success:
                print("โ ุชู ุงูุชุญุฏุซ ุจูุฌุงุญ!")
            else:
                print("โ ูุดู ูู ุงูุชุญุฏุซ")
        except Exception as e:
            print(f"โ ุฎุทุฃ: {e}")
        
        print()
        time.sleep(0.5)
    
    print("๐ฏ ุงูุชูู ุงุฎุชุจุงุฑ ุงูุนุจุงุฑุงุช ุงููุตูุฑุฉ!")

def test_natural_tunisian():
    """ุงุฎุชุจุงุฑ ุงูููุงู ุงูุทุจูุนู ุงูุชููุณู."""
    print("\n๐ฌ ุงุฎุชุจุงุฑ ุงูููุงู ุงูุทุจูุนู ุงูุชููุณู")
    print("=" * 50)
    print("ุงุฎุชุจุงุฑ ุงูููุงู ุงูุทุจูุนู ูุน ุงูุณูุงู...")
    print()
    
    test_cases = [
        {
            "text": "ุฃููุง! ูููุงุดุ",
            "context": {"mood": "happy", "is_greeting": True},
            "description": "ุชุญูุฉ ูุฑุญุจุฉ ุจุณูุทุฉ"
        },
        {
            "text": "ูุด ูุงุฏุฑ",
            "context": {"mood": "tired", "last_action": "error"},
            "description": "ุฑุฏ ูุชุนุจ ุจุณูุท"
        },
        {
            "text": "ููููุ ููุชุฉ!",
            "context": {"mood": "playful", "last_action": "joke_told"},
            "description": "ุฑุฏ ูุฑุญ ุจุณูุท"
        },
        {
            "text": "ููู",
            "context": {"mood": "professional"},
            "description": "ุฑุฏ ูููู ุจุณูุท"
        }
    ]
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"ุงุฎุชุจุงุฑ {i}: {test_case['description']}")
        print(f"ุงููุต: '{test_case['text']}'")
        print(f"ุงูุณูุงู: {test_case['context']}")
        print("ุงูุชุญุฏุซ ุจุดูู ุทุจูุนู...")
        
        try:
            success = speak_naturally(test_case['text'], test_case['context'])
            if success:
                print("โ ุชู ุงูุชุญุฏุซ ุจุดูู ุทุจูุนู!")
            else:
                print("โ ูุดู ูู ุงูุชุญุฏุซ")
        except Exception as e:
            print(f"โ ุฎุทุฃ: {e}")
        
        print()
        time.sleep(1)
    
    print("๐ฏ ุงูุชูู ุงุฎุชุจุงุฑ ุงูููุงู ุงูุทุจูุนู ุงูุชููุณู!")

def test_voice_quality():
    """ุงุฎุชุจุงุฑ ุฌูุฏุฉ ุงูุตูุช."""
    print("\n๐ ุงุฎุชุจุงุฑ ุฌูุฏุฉ ุงูุตูุช")
    print("=" * 50)
    print("ุงุฎุชุจุงุฑ ุฌูุฏุฉ ุงูุตูุช ูุงูุชุฃูุฏ ูู ุนุฏู ุงูุชุนููู...")
    print()
    
    test_phrase = "ุฃููุง ูุณููุง! ุฃูุง ูููุง"
    
    print("ุนุจุงุฑุฉ ุงูุงุฎุชุจุงุฑ:", test_phrase)
    print()
    
    # ุงุฎุชุจุงุฑ ุนูุงุทู ูุฎุชููุฉ ูุน ุนุจุงุฑุงุช ูุตูุฑุฉ
    emotions = ["happy", "excited", "calm", "playful", "professional"]
    
    for emotion in emotions:
        print(f"ุงุฎุชุจุงุฑ ุนุงุทูุฉ {emotion.upper()}:")
        try:
            success = speak_with_emotion(test_phrase, emotion)
            if success:
                print(f"   โ ุงูุชูู {emotion} ุจูุฌุงุญ")
            else:
                print(f"   โ ูุดู {emotion}")
        except Exception as e:
            print(f"   โ ุฎุทุฃ {emotion}: {e}")
        
        print()
        time.sleep(1)
    
    print("๐ฏ ุงูุชูู ุงุฎุชุจุงุฑ ุฌูุฏุฉ ุงูุตูุช!")
    print("โ ุฅุฐุง ุณูุนุช ููุงู ุนุฑุจู ุจุฏูู ุชุนูููุ ููู ูุนูู!")
    print("โ ูู ุนุงุทูุฉ ูุฌุจ ุฃู ุชุจุฏู ูุฎุชููุฉ ููููุงู!")

def main():
    """ุชุดุบูู ุฌููุน ุงุฎุชุจุงุฑุงุช ุงูุชููุณูุฉ."""
    print("๐ค ูุฌููุนุฉ ุงุฎุชุจุงุฑุงุช ูููุง ุงูุชููุณูุฉ")
    print("=" * 60)
    print("ูุฐุง ุณููุญุต ูุธุงู ูููุง ุงูุชููุณู ูุน:")
    print("โ ุชุดุบูู ุตูุช ุบูุฑ ูุชุนุทู (playsound + pygame ุงุญุชูุงุทู)")
    print("โ ูุต ุนุงุทูู ูุจุณุท (ุจุฏูู ุฒุฎุงุฑู ุทูููุฉ)")
    print("โ ุนุจุงุฑุงุช ูุตูุฑุฉ ูุชุฌูุจ ุงูุชุนููู")
    print("โ ููุงู ุทุจูุนู ูุน ุณูุงู ูุจุณุท")
    print("โ ุฌูุฏุฉ ุตูุช ุจุฏูู ุชุนููู")
    print()
    print("ุงุถุบุท Enter ูุจุฏุก ุงูุงุฎุชุจุงุฑ...")
    input()
    
    try:
        # ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ
        basic_success = test_basic_tunisian()
        
        if basic_success:
            # ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงููุจุณุทุฉ
            test_emotional_tunisian()
            test_short_phrases()
            test_natural_tunisian()
            test_voice_quality()
            
            print("\n๐ ุงูุชูุช ุฌููุน ุงูุงุฎุชุจุงุฑุงุช!")
            print("=" * 60)
            print("โ ุชุดุบูู ุงูุตูุช: ุชู ุฅุตูุงุญู!")
            print("โ ุงููุต ุงูุนุงุทูู: ูุจุณุท!")
            print("โ ุงูุนุจุงุฑุงุช ุงููุตูุฑุฉ: ุชุนูู!")
            print("โ ุงูููุงู ุงูุทุจูุนู: ูุนูู!")
            print("โ ุฌูุฏุฉ ุงูุตูุช: ุชุนูู!")
            print()
            print("๐ฏ ูููุง ูุฏูู ุงูุขู ุชุดุบูู ุตูุช ูุณุชูุฑ!")
            print("๐ ูุง ูุฒูุฏ ูู ูุดุงูู ุงูุชุนููู ุฃู ุงูุชุนุทู!")
            print("๐ฌ ุงูุชุนุจูุฑุงุช ุงูุนุงุทููุฉ ุงููุจุณุทุฉ ุชุนูู!")
            print("๐ญ ุงูุนูุงุทู ุงููุฎุชููุฉ ูุง ุชุฒุงู ุชุนูู ูููููุง ุฃูุตุฑ!")
            print()
            print("๐ ููุงุญุธุฉ: ูุฐุง ูุง ูุฒุงู ุนุฑุจู ูุตูุญุ ูููุณ ููุฌุฉ ุชููุณูุฉ")
            print("   ููู ุชุดุบูู ุงูุตูุช ุงูุขู ูุณุชูุฑ ูููุซูู!")
        else:
            print("\nโ ูุดู ุงุฎุชุจุงุฑ ุงูุตูุช ุงูุฃุณุงุณู!")
            print("ูุฑุฌู ุงูุชุญูู ูู ุฅุนุฏุงุฏุงุช ุงูุตูุช ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.")
        
    except Exception as e:
        print(f"\nโ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
